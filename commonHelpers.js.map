{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n// Оголошення змінних\nlet userSelectedDate;\nlet countdownInterval;\n\nconst inputDate = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= new Date().getTime()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startButton.disabled = false;\n    } else {\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\nflatpickr('#datetime-picker', options);\n\nconst addLeadingZero = value => {\n  return String(value).padStart(2, '0');\n};\n\nconst convertMs = ms => {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n};\n\nconst updateTimer = timeDifference => {\n  const { days, hours, minutes, seconds } = convertMs(timeDifference);\n  daysElement.textContent = addLeadingZero(days);\n  hoursElement.textContent = addLeadingZero(hours);\n  minutesElement.textContent = addLeadingZero(minutes);\n  secondsElement.textContent = addLeadingZero(seconds);\n};\n\nconst startTimer = targetTime => {\n  countdownInterval = setInterval(() => {\n    const currentTime = new Date().getTime();\n    const timeDiff = targetTime - currentTime;\n\n    if (timeDiff <= 0) {\n      iziToast.success({\n        title: 'CountDown Complete',\n        message: 'The countdown has reached zero',\n        position: 'topRight',\n      });\n      startButton.disabled = false;\n      inputDate.disabled = false;\n    } else {\n      updateTimer(timeDiff);\n    }\n  }, 1000);\n};\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  inputDate.disabled = true;\n  startTimer(userSelectedDate);\n});\n"],"names":["userSelectedDate","inputDate","startButton","daysElement","hoursElement","minutesElement","secondsElement","options","selectedDates","iziToast","flatpickr","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","updateTimer","timeDifference","startTimer","targetTime","currentTime","timeDiff"],"mappings":"sGAKA,IAAIA,EAGJ,MAAMC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAExDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,GAAK,IAAI,KAAM,EAAC,QAAO,GACxCC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDP,EAAY,SAAW,IAEvBF,EAAmBQ,EAAc,CAAC,CAErC,CACH,EACAE,EAAU,mBAAoBH,CAAO,EAErC,MAAMI,EAAiBC,GACd,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAGhCC,EAAYC,GAAM,CAOtB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,EAEMC,EAAcC,GAAkB,CACpC,KAAM,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUO,CAAc,EAClEjB,EAAY,YAAcQ,EAAeI,CAAI,EAC7CX,EAAa,YAAcO,EAAeK,CAAK,EAC/CX,EAAe,YAAcM,EAAeM,CAAO,EACnDX,EAAe,YAAcK,EAAeO,CAAO,CACrD,EAEMG,EAAaC,GAAc,CACX,YAAY,IAAM,CACpC,MAAMC,EAAc,IAAI,KAAM,EAAC,QAAO,EAChCC,EAAWF,EAAaC,EAE1BC,GAAY,GACdf,EAAS,QAAQ,CACf,MAAO,qBACP,QAAS,iCACT,SAAU,UAClB,CAAO,EACDP,EAAY,SAAW,GACvBD,EAAU,SAAW,IAErBkB,EAAYK,CAAQ,CAEvB,EAAE,GAAI,CACT,EAEAtB,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBD,EAAU,SAAW,GACrBoB,EAAWrB,CAAgB,CAC7B,CAAC"}